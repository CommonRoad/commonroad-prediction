image: python:3.10

stages:
  - static_check
  - test
  - build

before_script:
  - pip install poetry
  - poetry config installer.modern-installation false # this should be removed in the future, required because of invalid third-party wheels (https://github.com/python-poetry/poetry/issues/7686)
  - poetry config virtualenvs.in-project true
  - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de/".insteadOf "git@gitlab.lrz.de:"
  - poetry install --with tests
  - source .venv/bin/activate

#.run-test-with-coverage: &run-test-with-coverage
#  - apt-get update && apt-get install -y ffmpeg
#  - coverage run tests/run_tests.py
#  - coverage report -m || true

# static_check
prospector_source:
  stage: static_check
  image: python:3.10
  script:
    - python -m pip install prospector[with_mypy]
    - prospector crpred/

#build_and_test_python_3_8:
#  image: python:3.8
#  stage: test
#  script:
#    - *run-test-with-coverage
#
#build_and_test_python_3_9:
#  image: python:3.9
#  stage: test
#  script:
#    - *run-test-with-coverage
#
#build_and_test_python_3_10:
#  image: python:3.10
#  stage: test
#  script:
#    - *run-test-with-coverage
#
#build_and_test_python_3_11:
#  image: python:3.11
#  stage: test
#  script:
#    - *run-test-with-coverage
#    - coverage xml
#  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
#  artifacts:
#    reports:
#      coverage_report:
#        coverage_format: cobertura
#        path: coverage.xml
#
#build_doc:
#  stage: test
#  script:
#    - apt-get update && apt-get install -y graphviz
#    - poetry install --with docs
#    - cd doc && make html SPHINXOPTS="-W"
#  artifacts:
#    paths:
#      - ./doc/build/
#    expose_as: 'Documentation'
#
#validate_tutorials:
#  stage: test
#  script:
#    - poetry install --with tutorials
#    - pytest --nbval-lax ./tutorials/
#
#pages:
#  # Push the latest documentation of the development branch to the GitLab Pages
#  # at https://cps.pages.gitlab.lrz.de/commonroad-io/
#  stage: deploy
#  script:
#    - apt-get update && apt-get install -y graphviz
#    - poetry install --with docs
#    - cd doc/source && sphinx-build -b html . ../../public
#  artifacts:
#    paths:
#      - public
#  environment:
#    name: Gitlab Pages
#    url: https://cps.pages.gitlab.lrz.de/commonroad-io/
#  only:
#    - develop
#
#push_to_internal_pipy_registry:
#  # push the development version to the internal pipy registry https://gitlab.lrz.de/cps/commonroad-io/-/packages
#  # before manually triggering the job, delete the previous package in case the version number didn't change
#  stage: deploy
#  when: manual
#  only:
#    - develop
#  script:
#    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
#    - poetry build
#    - poetry publish --repository gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}
#
#push_to_external_pipy_test_registry:
#  stage: deploy
#  when: manual
#  only:
#    - master
#  script:
#    - poetry config repositories.test https://test.pypi.org/legacy/
#    - poetry build
#    - poetry publish --repository test -u ${CR_PYPI_TEST_USERNAME} -p ${CR_PYPI_TEST_PASSWORD}
#
#push_to_external_pipy_release_registry:
#  stage: deploy
#  when: manual
#  only:
#    - master
#  script:
#    - poetry build
#    - poetry publish -u ${CR_PYPI_RELEASE_USERNAME} -p ${CR_PYPI_RELEASE_PASSWORD}

